{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./../../../services/colaborador.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-toastr\";\nexport class CriarColaboradorComponent {\n  constructor(router, service, formBuilder, toast) {\n    this.router = router;\n    this.service = service;\n    this.formBuilder = formBuilder;\n    this.toast = toast;\n    this.listaColaboradores = [];\n  }\n  ngOnInit() {\n    this.service.listar().subscribe(listaColaboradores => {\n      this.listaColaboradores = listaColaboradores;\n    });\n    this.formGroup = this.formBuilder.group({\n      nome: [\"\", Validators.required],\n      cpf: [\"\", Validators.required]\n    });\n  }\n  confirmarDados() {\n    const arr = this.listaColaboradores.filter(dados => dados.cpf === this.formGroup.get('cpf')?.value);\n    if (arr.length > 0) return 0;\n    return 1;\n  }\n  salvar() {\n    if (this.formGroup.valid) {\n      if (this.confirmarDados()) {\n        this.service.criar(this.formGroup.value).subscribe(() => {\n          this.toast.info(\"Dados cadastrados com sucesso!\");\n        });\n      } else {\n        this.toast.error(\"Colaborador já cadastrado!\");\n      }\n    } else {\n      this.toast.error(\"Preencha os campos obrigatórios!\", \"Erro\");\n    }\n  }\n}\nCriarColaboradorComponent.ɵfac = function CriarColaboradorComponent_Factory(t) {\n  return new (t || CriarColaboradorComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ColaboradorService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nCriarColaboradorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CriarColaboradorComponent,\n  selectors: [[\"app-criar-colaborador\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"nome\", 1, \"form-label\"], [1, \"container_required\"], [\"type\", \"text\", \"id\", \"nome\", \"formControlName\", \"nome\", 1, \"form-control\"], [\"for\", \"cpf\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"cpf\", \"formControlName\", \"cpf\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"submit\", \"routerLink\", \"/listar-colaboradores\", 1, \"btn\", \"btn-primary\"]],\n  template: function CriarColaboradorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Cadastrar Colaborador\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0)(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Nome\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"span\", 3);\n      i0.ɵɵtext(7, \"(Campo Obrigat\\u00F3rio)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 5);\n      i0.ɵɵtext(11, \"CPF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"span\", 3);\n      i0.ɵɵtext(13, \"(Campo Obrigat\\u00F3rio)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function CriarColaboradorComponent_Template_button_click_15_listener() {\n        return ctx.salvar();\n      });\n      i0.ɵɵtext(16, \"Cadastrar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 8);\n      i0.ɵɵtext(18, \"Cancelar\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n    }\n  },\n  dependencies: [i1.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".container__required[_ngcontent-%COMP%]{\\n    color: rgb(75, 75, 75);\\n    font-size: smaller;\\n    padding-left: 0.5rem;\\n  }\\n\\n  .btn[_ngcontent-%COMP%]{\\n    margin: 0 1rem;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jb2xhYm9yYWRvcmVzL2NyaWFyLWNvbGFib3JhZG9yL2NyaWFyLWNvbGFib3JhZG9yLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLG9CQUFvQjtFQUN0Qjs7RUFFQTtJQUNFLGNBQWM7RUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyX19yZXF1aXJlZHtcclxuICAgIGNvbG9yOiByZ2IoNzUsIDc1LCA3NSk7XHJcbiAgICBmb250LXNpemU6IHNtYWxsZXI7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDAuNXJlbTtcclxuICB9XHJcblxyXG4gIC5idG57XHJcbiAgICBtYXJnaW46IDAgMXJlbTtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","CriarColaboradorComponent","constructor","router","service","formBuilder","toast","listaColaboradores","ngOnInit","listar","subscribe","formGroup","group","nome","required","cpf","confirmarDados","arr","filter","dados","get","value","length","salvar","valid","criar","info","error","i0","ɵɵdirectiveInject","i1","Router","i2","ColaboradorService","i3","FormBuilder","i4","ToastrService","selectors","decls","vars","consts","template","CriarColaboradorComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","CriarColaboradorComponent_Template_button_click_15_listener","ɵɵadvance","ɵɵproperty"],"sources":["D:\\Documentos 2\\Desafio_WL\\Desafio-Unidac-Grupo-WL\\Frontend\\desafio_unidac\\src\\app\\components\\colaboradores\\criar-colaborador\\criar-colaborador.component.ts","D:\\Documentos 2\\Desafio_WL\\Desafio-Unidac-Grupo-WL\\Frontend\\desafio_unidac\\src\\app\\components\\colaboradores\\criar-colaborador\\criar-colaborador.component.html"],"sourcesContent":["import { ColaboradorService } from './../../../services/colaborador.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { Colaborador } from 'src/app/models/colaborador';\n\n@Component({\n  selector: 'app-criar-colaborador',\n  templateUrl: './criar-colaborador.component.html',\n  styleUrls: ['./criar-colaborador.component.css']\n})\nexport class CriarColaboradorComponent implements OnInit{\n  \n  formGroup!:FormGroup;\n  listaColaboradores:Colaborador[] = [];\n\n  constructor(private router: Router,\n    private service: ColaboradorService,\n    private formBuilder: FormBuilder,\n    private toast: ToastrService){\n    }\n\n  ngOnInit(): void {\n    this.service.listar().subscribe((listaColaboradores) => {\n      this.listaColaboradores = listaColaboradores\n  })\n    this.formGroup = this.formBuilder.group({\n      nome:[\"\",Validators.required],\n      cpf:[\"\",Validators.required]\n    })\n  }\n\n  confirmarDados(){\n    const arr = this.listaColaboradores.filter(dados => dados.cpf === this.formGroup.get('cpf')?.value) \n    if(arr.length>0)\n      return 0\n    return 1 \n  }\n\n  salvar(){\n    if(this.formGroup.valid){\n      if(this.confirmarDados()){\n        this.service.criar(this.formGroup.value).subscribe(() =>{\n          this.toast.info(\"Dados cadastrados com sucesso!\");\n        });\n      }else{\n        this.toast.error(\"Colaborador já cadastrado!\")\n      }\n    } else{\n      this.toast.error(\"Preencha os campos obrigatórios!\",\"Erro\");\n    }\n  }\n\n\n}\n","<h1>Cadastrar Colaborador</h1>\n<form [formGroup]=\"formGroup\">\n    <div class=\"mb-3\">\n      <label for=\"nome\" class=\"form-label\">Nome</label>\n      <span class=\"container_required\">(Campo Obrigatório)</span>\n      <input type=\"text\" class=\"form-control\" id=\"nome\" formControlName=\"nome\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"cpf\" class=\"form-label\">CPF</label>\n      <span class=\"container_required\">(Campo Obrigatório)</span>\n      <input type=\"text\" class=\"form-control\" id=\"cpf\" formControlName=\"cpf\"/>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"salvar()\" >Cadastrar</button>\n    <button type=\"submit\" class=\"btn btn-primary\" routerLink=\"/listar-colaboradores\">Cancelar</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}