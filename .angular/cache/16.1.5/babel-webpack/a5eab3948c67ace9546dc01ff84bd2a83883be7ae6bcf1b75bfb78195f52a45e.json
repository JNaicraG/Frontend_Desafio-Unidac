{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/colaborador.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-toastr\";\nexport class EditarColaboradorComponent {\n  constructor(router, service, formBuilder, route, toast) {\n    this.router = router;\n    this.service = service;\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.toast = toast;\n    this.listaColaboradores = [];\n  }\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.service.listar().subscribe(listaColaboradores => {\n      this.listaColaboradores = listaColaboradores;\n    });\n    this.formGroup = this.formBuilder.group({\n      nome: [\"\", Validators.required],\n      cpf: [\"\", Validators.required]\n    });\n  }\n  confirmarDados() {\n    const arr = this.listaColaboradores.filter(dados => dados.cpf === this.formGroup.get('cpf')?.value);\n    if (arr.length === 1) return 1;\n    return 0;\n  }\n  editar() {\n    if (this.formGroup.valid) {\n      if (this.confirmarDados()) {\n        this.service.editar(this.formGroup.value).subscribe(() => {\n          this.toast.info(\"Dados cadastrados com sucesso!\");\n        });\n      } else {\n        this.toast.error(\"Colaborador duplicado!\");\n      }\n    } else {\n      this.toast.error(\"Preencha os campos obrigatórios!\", \"Erro\");\n    }\n  }\n}\nEditarColaboradorComponent.ɵfac = function EditarColaboradorComponent_Factory(t) {\n  return new (t || EditarColaboradorComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ColaboradorService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nEditarColaboradorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditarColaboradorComponent,\n  selectors: [[\"app-editar-colaborador\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[3, \"formGroup\"], [1, \"mb-3\"], [\"for\", \"nome\", 1, \"form-label\"], [1, \"container_required\"], [\"type\", \"text\", \"id\", \"nome\", \"formControlName\", \"nome\", 1, \"form-control\"], [\"for\", \"cpf\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"cpf\", \"formControlName\", \"cpf\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"submit\", \"routerLink\", \"/listar-colaboradores\", 1, \"btn\", \"btn-primary\"]],\n  template: function EditarColaboradorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Cadastrar Colaborador\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0)(3, \"div\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Nome\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"span\", 3);\n      i0.ɵɵtext(7, \"(Campo Obrigat\\u00F3rio)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 5);\n      i0.ɵɵtext(11, \"CPF\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"span\", 3);\n      i0.ɵɵtext(13, \"(Campo Obrigat\\u00F3rio)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function EditarColaboradorComponent_Template_button_click_15_listener() {\n        return ctx.editar();\n      });\n      i0.ɵɵtext(16, \"Cadastrar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 8);\n      i0.ɵɵtext(18, \"Cancelar\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n    }\n  },\n  dependencies: [i1.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","EditarColaboradorComponent","constructor","router","service","formBuilder","route","toast","listaColaboradores","ngOnInit","id","snapshot","paramMap","get","listar","subscribe","formGroup","group","nome","required","cpf","confirmarDados","arr","filter","dados","value","length","editar","valid","info","error","i0","ɵɵdirectiveInject","i1","Router","i2","ColaboradorService","i3","FormBuilder","ActivatedRoute","i4","ToastrService","selectors","decls","vars","consts","template","EditarColaboradorComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","EditarColaboradorComponent_Template_button_click_15_listener","ɵɵadvance","ɵɵproperty"],"sources":["D:\\Documentos 2\\Desafio_WL\\Desafio-Unidac-Grupo-WL\\Frontend\\desafio_unidac\\src\\app\\components\\colaboradores\\editar-colaborador\\editar-colaborador.component.ts","D:\\Documentos 2\\Desafio_WL\\Desafio-Unidac-Grupo-WL\\Frontend\\desafio_unidac\\src\\app\\components\\colaboradores\\editar-colaborador\\editar-colaborador.component.html"],"sourcesContent":["import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ColaboradorService } from 'src/app/services/colaborador.service';\nimport {Colaborador} from '../../../models/colaborador';\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-editar-colaborador',\n  templateUrl: './editar-colaborador.component.html',\n  styleUrls: ['./editar-colaborador.component.css']\n})\nexport class EditarColaboradorComponent implements OnInit{\n\n  formGroup!:FormGroup; \n  listaColaboradores:Colaborador[] = [];\n  colaborador:Colaborador;\n  \n  constructor(private router: Router,\n    private service: ColaboradorService,\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private toast: ToastrService){\n    }\n  ngOnInit(): void {\n    const id = this.route.snapshot.paramMap.get('id')\n    this.service.listar().subscribe((listaColaboradores) => {\n      this.listaColaboradores = listaColaboradores\n  })\n    this.formGroup = this.formBuilder.group({\n      nome:[\"\",Validators.required],\n      cpf:[\"\",Validators.required]\n    })\n  }\n\n\n  confirmarDados(){\n    const arr = this.listaColaboradores.filter(dados => dados.cpf === this.formGroup.get('cpf')?.value) \n    if(arr.length===1)\n      return 1\n    return 0\n  }\n\n  editar(){\n    if(this.formGroup.valid){\n      if(this.confirmarDados()){\n        \n        this.service.editar(this.formGroup.value).subscribe(() =>{\n          this.toast.info(\"Dados cadastrados com sucesso!\");\n        });\n      }else{\n        this.toast.error(\"Colaborador duplicado!\")\n      }\n    } else{\n      this.toast.error(\"Preencha os campos obrigatórios!\",\"Erro\");\n    }\n  }\n\n}\n","<h1>Cadastrar Colaborador</h1>\n<form [formGroup]=\"formGroup\">\n    <div class=\"mb-3\">\n      <label for=\"nome\" class=\"form-label\">Nome</label>\n      <span class=\"container_required\">(Campo Obrigatório)</span>\n      <input type=\"text\" class=\"form-control\" id=\"nome\" formControlName=\"nome\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"cpf\" class=\"form-label\">CPF</label>\n      <span class=\"container_required\">(Campo Obrigatório)</span>\n      <input type=\"text\" class=\"form-control\" id=\"cpf\" formControlName=\"cpf\"/>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"editar()\" >Cadastrar</button>\n    <button type=\"submit\" class=\"btn btn-primary\" routerLink=\"/listar-colaboradores\">Cancelar</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}